service: market-project

custom:
  prefixName: myMarket
  itemTableName: ${self:custom.prefixName}-itemTable
  transTableName: ${self:custom.prefixName}-transTable

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-3
  stage: ${opt:stage, 'dev'}
  environment:
    itemTableName: ${self:custom.itemTableName}
    transTableName: ${self:custom.transTableName}

functions:
  getItem:
    handler: src/handlers/getItem.handler
    events:
      - http:
          path: /item/{id}
          method: get
  putItem:
    handler: src/handlers/putItem.handler
    events:
      - http:
          path: /item
          method: post
  trans:
    handler: src/handlers/trans.handler
    events:
      - http:
          path: /trans/{type}/{cname}
          method: post

resources:
  Resources:
    ItemTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.itemTableName}
        AttributeDefinitions:
          - AttributeName: itemId
            AttributeType: S
        KeySchema:
          - AttributeName: itemId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    TransTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.transTableName}
        AttributeDefinitions:
          - AttributeName: transId
            AttributeType: S
        KeySchema:
          - AttributeName: transId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
